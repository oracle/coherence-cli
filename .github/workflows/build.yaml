# Copyright 2021, 2025 Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence CLI GitHub Actions CI build.
# ---------------------------------------------------------------------------
name: CI

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - gh-pages

jobs:
  build:
    runs-on: ubuntu-latest

#   Checkout the source, we need a depth of zero to fetch all of the history otherwise
#   the copyright check cannot work out the date of the files from Git.
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get Docker Images
      shell: bash
      run: |
        docker pull gcr.io/distroless/java17

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Cache Go Modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Code Review
      shell: bash
      run: |
        make golangci

    - name: Copyright Check
      shell: bash
      run: |
        make copyright

    - name: Unit Tests
      shell: bash
      run: make test-cohctl

    - name: E2E Local Tests
      shell: bash
      run: |
        COHERENCE_BASE_IMAGE=gcr.io/distroless/java17 PROFILES=,executor COHERENCE_VERSION=14.1.2-0-3 make clean build-test-images test-e2e-standalone

    - name: Discovery Tests
      shell: bash
      run: make test-clean test-discovery

    - name: Document Links tests
      shell: bash
      run: make test-docs

    - name: Build for all platforms
      shell: bash
      run:  make cohctl-all

    - name: Upload Linux amd64
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: cohctl-linux-amd64
        path: bin/linux/amd64/cohctl

    - name: Upload Linux arm64
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: cohctl-linux-arm64
        path: bin/linux/arm64/cohctl

    - name: Upload Linux 386
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: cohctl-linux-386
        path: bin/linux/386/cohctl

    - name: Upload Windows amd64
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: cohctl-windows-amd64
        path: bin/windows/amd64/cohctl.exe

    - name: Upload Windows arm
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: cohctl-windows-arm
        path: bin/windows/arm/cohctl.exe

    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
