#
# Copyright (c) 2025 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.
#
templates:
  - name: helidon
    frameworkVersion: "4.2.3"
    instructions: |
      To run the Helidon starter you must have JDK21+ and maven 3.8.5+.
      Change to the newly created directory and run the following to build:

          mvn clean install

      To run a single process with Helidon and Coherence:
          java -jar target/helidon.jar

      To run an additional storage-enabled Coherence server:
          java -Dmain.class=com.tangosol.net.Coherence -Dcoherence.management.http=none -Dserver.port=-1 -jar target/helidon.jar
      
      Note: If you run the storage-enabled server, you can add the argument "-Dcoherence.distributed.localstorage=false" to the single process
      command, before the -jar option to start the Helidon application as a storage-disabled client, which is the preferred method
      as it allows for scaling of the Coherence tier separately.
    files:
      - pom.xml
      - src/main/resources/logging.properties
      - src/main/resources/META-INF/beans.xml
      - src/main/resources/META-INF/helidon/serial-config.properties
      - src/main/resources/META-INF/microprofile-config.properties
      - src/main/java/com/oracle/coherence/demo/frameworks/helidon/Customer.java
      - src/main/java/com/oracle/coherence/demo/frameworks/helidon/CustomerResource.java

  - name: springboot
    frameworkVersion: "spring-boot-starter 3.5.3, coherence-spring 4.3.1"
    instructions: |
      To run Spring Boot starter you must have JDK21+ and maven 3.8.5+.
      Change to the newly created directory and run the following to build:

          mvn clean install

      To run a single process with Spring Boot and Coherence:
          java -jar target/springboot-1.0-SNAPSHOT.jar

      To run an additional storage-enabled Coherence server:
          java -Dserver.port=-1 -Dloader.main=com.tangosol.net.Coherence -Dcoherence.management.http=none -jar target/springboot-1.0-SNAPSHOT.jar
      
      Note: If you run the storage-enabled server, you can add the argument "-Dcoherence.distributed.localstorage=false" to the single process
      command, before the -jar option to start the Spring Boot application as a storage-disabled client, which is the preferred method
      as it allows for scaling of the Coherence tier separately.
    files:
      - pom.xml
      - src/main/resources/application.properties
      - src/main/java/com/oracle/coherence/demo/frameworks/springboot/Customer.java
      - src/main/java/com/oracle/coherence/demo/frameworks/springboot/controller/DemoController.java
      - src/main/java/com/oracle/coherence/demo/frameworks/springboot/DemoApplication.java

  - name: micronaut
    frameworkVersion: "micronaut-parent: 4.7.3, micronaut-coherence: 5.0.5"
    instructions: |
      To run Micronaut starter you must have JDK21+ and maven 3.8.5+.
      Change to the newly created directory and run the following to build:

          mvn clean install

      To run a single server with Micronaut and Coherence:
          java -jar target/micronaut-1.0-SNAPSHOT-shaded.jar

      To run an additional storage-enabled Coherence server:
          java -Dmicronaut.main.class=com.tangosol.net.Coherence -Dcoherence.management.http=none -Dmicronaut.server.port=-1 -jar target/micronaut-1.0-SNAPSHOT-shaded.jar
      
      Note: If you run the storage-enabled server, you can add the argument "-Dcoherence.distributed.localstorage=false" to the single process
      command, before the -jar option to start the Micronaut application as a storage-disabled client, which is the preferred method
      as it allows for scaling of the Coherence tier separately.
    files:
      - pom.xml
      - src/main/resources/logback.xml
      - src/main/resources/application.yml
      - src/main/java/com/oracle/coherence/demo/frameworks/micronaut/Application.java
      - src/main/java/com/oracle/coherence/demo/frameworks/micronaut/Customer.java
      - src/main/java/com/oracle/coherence/demo/frameworks/micronaut/rest/ApplicationController.java

  - name: javascript
    frameworkVersion: "coherence-js-client: 1.2.3"
    instructions: |
      To run the JavaScript starter, you must have Node 18.15.x or later and NPM 9.x or later.
      
      Change to the newly created directory and run the following to build:

          npm install

      To run a Coherence server with port 1408 for gRPC:
          docker run -d -p 1408:1408 -p 30000:30000 ghcr.io/oracle/coherence-ce:25.03.1
      
      To run the application:
          node main.js
    files:
      - main.js
      - package.json

  - name: python
    frameworkVersion: "coherence-py-client: 2.0.3"
    instructions: |
      To run the Python starter, you must have Python 3.9.x or later.
      
      Change to the newly created directory and run the following to install depdencies.

          pip install -r requirements.txt

      To run a Coherence server with port 1408 for gRPC:
          docker run -d -p 1408:1408 -p 30000:30000 ghcr.io/oracle/coherence-ce:25.03.1
      
      To run the application:
          python main.js
    files:
      - main.py

  - name: go
    frameworkVersion: "coherence-go-client: v2.3.1"
    instructions: |
      To run the Go starter, you must have Go 1.23.x or later.
      
      Change to the newly created directory and run the following to install depdencies.

          go mod tidy

      To run a Coherence server with port 1408 for gRPC:
          docker run -d -p 1408:1408 -p 30000:30000 ghcr.io/oracle/coherence-ce:25.03.1
      
      To run the application:
          go run main.go
    files:
      - main.py
